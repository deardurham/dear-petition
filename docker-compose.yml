version: '3'

volumes:
  local_postgres_data: {}
  local_postgres_data_backups: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: dear_petition_local_django
    depends_on:
      - postgres
      - mailhog
    volumes:
      - .:/app
      - /app/frontend/node_modules
      - /app/node_modules
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    ports:
      - "8000:8000"
    command: /start
    tty: true
    stdin_open: true

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: dear_petition_production_postgres
    volumes:
      - local_postgres_data:/var/lib/postgresql/data
      - local_postgres_data_backups:/backups
    env_file:
      - ./.envs/.local/.postgres

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.dev
    stdin_open: true
    depends_on:
      - django
    ports:
      - "3000:3000"
    volumes:
      - ./:/app/
      - /app/node_modules
    env_file:
      - ./.envs/.local/.frontend
    environment:
      - OVERRIDE_API_PROXY
      - NODE_PATH=/home/node_install/node_modules

  mailhog:
    image: mailhog/mailhog:v1.0.0
    ports:
      - "8025:8025"

  redis:
    image: redis:5-alpine

  celery:
    <<: *django
    ports:
      - "6379:6379"
    environment:
      - COLUMNS=80 #Necessary because of some annoying zero-width shell error
    command: celery worker --app=dear_petition.taskapp --beat --loglevel=info

  jupyter:
    <<: *django
    image: dear_petition_local_jupyter
    ports:
      - "8001:8888"
    depends_on:
      - postgres
      - redis
    command: /start-jupyter
