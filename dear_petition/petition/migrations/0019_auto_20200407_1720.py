# Generated by Django 2.2.10 on 2020-04-07 16:49

from django.db import migrations

from ..constants import (
    SUPERIOR_COURT,
    DISTRICT_COURT,
    NOT_AVAILABLE,
)

from ..utils import make_datetime_aware, dt_obj_to_date


def update_existing_ciprs_records(apps, schema_editor):
    CIPRSRecord = apps.get_model("petition", "CIPRSRecord")
    records = CIPRSRecord.objects.exclude(data=None)
    for r in records:
        refresh_record_from_data(r)


def refresh_record_from_data(record):
    """Updates model fields that depends on the data JSONField

    The record exists, but the raw data (data - JSONFIELD) has
    changed. Let's update the models that are extracting data
    from this field.
    """
    record.file_no = record.data.get("General", {}).get("File No", "")
    record.county = record.data.get("General", {}).get("County", "")
    record.dob = record.data.get("Defendant", {}).get("Date of Birth/Estimated Age", None)
    record.sex = record.data.get("Defendant", {}).get("Sex", "")
    record.race = record.data.get("Defendant", {}).get("Race", "")
    record.case_status = record.data.get("Case Information", {}).get("Case Status", "")
    record.offense_date = make_datetime_aware(
        record.data.get("Case Information", {}).get("Offense Date", None)
    )
    record.arrest_date = record.data.get("Offense Record", {}).get(
        "Arrest Date", dt_obj_to_date(record.offense_date)
    )
    record.jurisdiction = get_jurisdiction(record)
    record.save()


def get_jurisdiction(record):
    is_superior = record.data.get("General", {}).get("Superior", "")
    is_district = record.data.get("General", {}).get("District", "")
    if is_superior:
        return SUPERIOR_COURT
    elif is_district:
        return DISTRICT_COURT
    else:
        return NOT_AVAILABLE


class Migration(migrations.Migration):
    dependencies = [
        ("petition", "0018_auto_20200407_1720"),
    ]

    operations = [migrations.RunPython(update_existing_ciprs_records, migrations.RunPython.noop)]
